// **************************************
// Lab session 1b
// The detect shake model
// **************************************

// To verify that the edge device is connected we use listening_edges() function. 
// Your edge device should be listed in the result.
listening_edges();


// Send a query to the edge using edge_cq()
//edge_cq("edgename","query");
//Replace edge99 with your edge device name e.g edge19;
edge_cq("edge99", "1+1");


// we can use a simpler form using //peer: edgename
//Replace edge99 with your edge device name e.g edge19
//peer: edge99
1+1;

//We can also use the "my_edge" alias functionality
//set the alias to the edge device name on the form 
//map-peer: my_edge: edgename
//This can also be done in the settings json-file

//Replace edge99 with your edge device name e.g edge19
//put your curser on the line below and press shift-Enter
//map-peer: my_edge: edge99

//We can now use peer:my_edge to access the edge device
//peer: my_edge
1+1;


// Check for available sensor on the edge device
//peer: my_edge
signals();

// We can use signal_stream('accelerometer') to display the accelerometer stream.
//peer: my_edge
//plot: Line plot
signal_stream('accelerometer');

//Shake the board!


// Develop the model

// Create a function to calculate the magnitude of the acceleration.
//peer: my_edge
create function gravity_acceleration() -> Stream of Number
  as select Stream of sqrt(sum(g .^ 2))
       from Vector of Number g
      where g in signal_stream("accelerometer");

//peer: my_edge
//plot: Line plot
gravity_acceleration();


// Create "a window" over the stream and compute the standard deviation
// We will talk more about winagg in lab2 
//peer: my_edge
//plot: Line plot
stdev(winagg(gravity_acceleration(), 50, 5));


// Now we use the stddev() expression to create a function that signals 
// if the shaking is above some threshold
//peer: my_edge
create function shake_state(Number threshold) -> Stream of Number
  as select Stream of shakes
       from Number shakes, Number elem
      where elem in stdev(winagg(gravity_acceleration(), 50, 5))
        and shakes = case when elem > threshold then 1
                          else 0 end;



//peer: my_edge
//plot: Line plot
shake_state(0.2);

//Use the function changed() to only send data
//when the status changes
//peer: my_edge
create function shakes(Number threshold) -> Stream of Number
  as changed(shake_state(threshold));

//peer: my_edge
shakes(0.2);


// Let's add som post processing
//peer: my_edge
create function detect_shake(Number threshold) -> Stream of Vector
  as select Stream of [timeval(rnow()),this_peerid(),sh]
       from Number sh
      where sh in shakes(threshold);

//peer: my_edge
detect_shake(0.2)
